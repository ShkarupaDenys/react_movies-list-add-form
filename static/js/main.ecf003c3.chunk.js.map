{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","TextField","name","value","label","required","onChange","useState","touched","setToched","Math","random","toString","slice","id","hasError","htmlFor","classNames","type","placeholder","onBlur","NewMovie","onAdd","count","setCount","imdbId","newMovie","setNewMovie","isDataMovie","setIsDataMovie","pattern","useEffect","handleChange","event","target","prev","onSubmit","e","preventDefault","match","alert","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"muEAQaA,EAA6B,SAAH,OAAMC,EAAK,EAALA,MAAK,OAChD,sBAAKC,UAAU,OAAO,UAAQ,aAAY,UACxC,qBAAKA,UAAU,aAAY,SACzB,wBAAQA,UAAU,gBAAe,SAC/B,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAc,UAC3B,sBAAKA,UAAU,QAAO,UACpB,qBAAKA,UAAU,aAAY,SACzB,wBAAQA,UAAU,iBAAgB,SAChC,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAe,SAC5B,mBAAGA,UAAU,aAAY,SAAED,EAAMK,aAIrC,sBAAKJ,UAAU,UAAS,UACrBD,EAAMM,YACP,uBACA,mBAAGC,KAAI,UAAKP,EAAMQ,SAAU,SAAC,iBAG7B,EC7BKC,EAA8B,SAAH,OAAMC,EAAM,EAANA,OAAM,OAClD,qBAAKT,UAAU,SAAQ,SACpBS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAS,CAERA,MAAOA,GADFA,EAAMK,MAEX,KAEA,E,8BCFD,IAAMO,EAA6B,SAAH,GAMhC,IALLC,EAAI,EAAJA,KACAC,EAAK,EAALA,MAAM,EAAD,EACLC,aAAK,MAAGF,EAAI,MACZG,gBAAQ,OAAQ,EAChBC,EAAQ,EAARA,SAEA,EAA6BC,oBAAS,GAAM,mBAArCC,EAAO,KAAEC,EAAS,KAEzB,EAAaF,oBAAS,2BAASL,EAAI,YAZ5BQ,KAAKC,SAASC,WAAWC,MAAM,GAYkB,IAAjDC,EAAoD,iBAAlD,GACHC,EAAWP,GAAWH,IAAaF,EAEzC,OACE,sBAAKb,UAAU,QAAO,UACpB,uBAAOA,UAAU,QAAQ0B,QAASF,EAAG,SAClCV,IAGH,qBAAKd,UAAU,UAAS,SACtB,uBACEwB,GAAIA,EACJZ,KAAMA,EACN,0BAAkBA,GAClBZ,UAAW2B,IAAW,QAAS,CAC7B,YAAaF,IAEfG,KAAK,OACLC,YAAW,gBAAWf,GACtBD,MAAOA,EACPG,SAAUA,EACVc,OAAQ,kBAAMX,GAAU,EAAK,MAIhCM,GACC,mBAAGzB,UAAU,iBAAgB,mBAAKc,EAAK,oBAI/C,EC9CaiB,EAAsB,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACpC,EAA0Bf,mBAAS,GAAE,mBAA9BgB,EAAK,KAAEC,EAAQ,KAEtB,EAAgCjB,mBAAS,CACvCb,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACT4B,OAAQ,KACR,mBANKC,EAAQ,KAAEC,EAAW,KAO5B,EAAsCpB,oBAAS,GAAM,mBAA9CqB,EAAW,KAAEC,EAAc,KAG5BC,EAAU,uKAEhBC,qBAAU,WAEJL,EAAShC,OACNgC,EAASlC,QACTkC,EAAS7B,SACT6B,EAASD,OAEdI,GAAe,GAKjBA,GAAe,EACjB,GAAG,CACDH,EAAShC,MACTgC,EAASlC,OACTkC,EAAS7B,QACT6B,EAASD,SAGX,IAQMO,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBhC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEdwB,GAAY,SAACQ,GACX,OAAO,2BACFA,GAAI,kBACNjC,EAAOC,GAEZ,GACF,EAgBA,OACE,uBACEb,UAAU,WAEV8C,SAlBiB,SAACC,GACpBA,EAAEC,iBAEGZ,EAASlC,OAAO+C,MAAMT,IAAaJ,EAAS7B,QAAQ0C,MAAMT,IAM/DR,EAAMI,GACNF,GAAS,SAAAW,GAAI,OAAIA,EAAO,CAAC,IA7BDR,EAAY,CACpCjC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACT4B,OAAQ,MAkBNe,MAAM,aAQV,EAM2B,UAEvB,oBAAIlD,UAAU,QAAO,SAAC,gBAEtB,cAAC,EAAS,CACRY,KAAK,QACLE,MAAM,QACND,MAAOuB,EAAShC,MAChBY,SAAU0B,EACV3B,UAAQ,IAGV,cAAC,EAAS,CACRH,KAAK,cACLE,MAAM,cACND,MAAOuB,EAAS/B,YAChBW,SAAU0B,IAGZ,cAAC,EAAS,CACR9B,KAAK,SACLE,MAAM,YACND,MAAOuB,EAASlC,OAChBc,SAAU0B,EACV3B,UAAQ,IAGV,cAAC,EAAS,CACRH,KAAK,UACLE,MAAM,WACND,MAAOuB,EAAS7B,QAChBS,SAAU0B,EACV3B,UAAQ,IAGV,cAAC,EAAS,CACRH,KAAK,SACLE,MAAM,UACND,MAAOuB,EAASD,OAChBnB,SAAU0B,EACV3B,UAAQ,IAGV,qBAAKf,UAAU,mBAAkB,SAC/B,qBAAKA,UAAU,UAAS,SACtB,wBACE4B,KAAK,SACL,UAAQ,gBACR5B,UAAU,iBACVmD,UAAWb,EAAY,SACxB,cAnDAL,EA0DX,E,QClIamB,G,MAAM,WACjB,MAA4BnC,mBAASoC,GAAiB,mBAA/C5C,EAAM,KAAE6C,EAAS,KAIxB,OACE,sBAAKtD,UAAU,OAAM,UACnB,qBAAKA,UAAU,eAAc,SAC3B,cAAC,EAAU,CAACS,OAAQA,MAEtB,qBAAKT,UAAU,UAAS,SACtB,cAAC,EAAQ,CAACgC,MARC,SAACjC,GAAY,OAAKuD,GAAU,SAAAT,GAAI,4BAAQA,GAAI,CAAE9C,GAAQ,WAYzE,GCnBAwD,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,Q","file":"static/js/main.ecf003c3.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={`${movie.imdbUrl}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.title}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Input } from '../../types/events';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (event: Input) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange,\n}) => {\n  const [touched, setToched] = useState(false);\n\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { Input, Submit } from '../../types/events';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [isDataMovie, setIsDataMovie] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  useEffect(() => {\n    if (\n      !!newMovie.title\n      && !!newMovie.imgUrl\n      && !!newMovie.imdbUrl\n      && !!newMovie.imdbId\n    ) {\n      setIsDataMovie(true);\n\n      return;\n    }\n\n    setIsDataMovie(false);\n  }, [\n    newMovie.title,\n    newMovie.imgUrl,\n    newMovie.imdbUrl,\n    newMovie.imdbId,\n  ]);\n\n  const clearFields = () => setNewMovie({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const handleChange = (event: Input) => {\n    const { name, value } = event.target;\n\n    setNewMovie((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSubmit = (e: Submit) => {\n    e.preventDefault();\n\n    if (!newMovie.imgUrl.match(pattern) || !newMovie.imdbUrl.match(pattern)) {\n      alert('Check URLs');\n\n      return;\n    }\n\n    onAdd(newMovie);\n    setCount(prev => prev + 1);\n    clearFields();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isDataMovie}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => setMovies(prev => [...prev, movie]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}